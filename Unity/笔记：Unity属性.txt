参考：脚本API.UnityXXX.Attributes
属性：[...]  继承System.ComponentModel. 类名为XXXAttribute, 实际使用 XXX[(...)]
isValidateFunction ->  bool fn()   //第一个名字记得一样

System{
	[Serializable]	//可以被unity编辑器编辑
	[NonSerialized]	//忽略序列化，默认只序列化public。可避免ScriptObject被序列化而不能判null
	[Flags]  	//用于enum，在编辑器上可以实现枚举多选
}
System.Runtime.InteropServices{   
	[DllImport("DllName")]   //static extern fn，DllName.dll放在Assets/Plugins
}

UnityEngine{
	[SelectionBase]  //class，选子对象时自动跳转到根
	[SerializeReference]  //base class value，让基类对象可以序列化派生类，但不同脚本间不能共享数据，考虑用ScriptObject
	[SerializeField]  //private value，显示并序列化私有成员		

	[RequireComponent(typeof(Animator))] //class，若没有该组件，自动添加上去
	[DisallowMultipleComponent]  //class, 禁止多个相同类型（或子类型）的脚本挂在同一个GameObject上	

	[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.XXX)]	//static fn
	
	[ExecuteInEditMode]  //MonoBehaviours，让脚本在Editor下开始运行，不考虑预制件模式
	[ExecuteAlways]  //MonoBehaviours，让脚本在Eidtor和Play下都运行

	[CreateAssetMenu(fileName = "", menuName = ")]  //建立文件，用于ScriptObject保存 
	[AddComponentMenu("XX/x")]  //class
	[ContextMenu("")]	 //fn，在Inspector的脚本...处添加方法

	[TextArea(minline, maxline)]  //string的多行编辑，自动调整高度，超过maxline显示滚动条	
	[Multiline]   //string的多行编辑，没有滚动条，全部显示
	[ColorUsage] //Color，HDR还是LDR，以及alpha是否显示
	[GradientUsage]  //Gradient，渐变配置HDR/LDR，颜色空间
	[Delayed]	  //float、int、string，在回车或失去焦点时才会重新赋值。运行时改参数很管用

	[Header("")]、[ToolTip("")]、[Space()]  //value
	[Min()]、[Max()]、[Range()]  //value

	[HelpURL("")]  //class
	[InspectorName("")]  //enum item，替换枚举值的显示名称

	[PreferBinarySerialization]  //ScriptableObject，强制二进制序列化保存，在大量数据时好用。多个资源时遵循主文件的序列方式

	[ExcludeFromObjectFactory]  //class，避免ObjectFactory 创建该类及其继承类。
	[ExcludeFromPreset]  //class，防止从该类的实例创建 Preset。

	[Property]  //class，用于给UnityEditor.PropertyDrawer，[CustomPropertyDrawer(type)]自定义Inspector
	[SharedBetweenAnimators]  //StateMachineBehaviour，所以Animator共享 
}	

UnityEditor{	floder Editor
	[MenuItem("MyTools/fn")]	//static void fn(){...}  //在菜单栏上点击运行
	[FilePath("path", location)]	//ScriptableSingleton<T>，单例ScriptObject

	[CustomEditor(typeof(XXX))]	//class : Editor  XXX为可在Inspector显示的组件或ScriptObject
	[CustomPropertyDrawer(typeof(Data))]  //PropertyDrawer，自定义数据绘制
	[DrawGizmo(GIzmoType.XX|...)]  //static fn(T scr, GizmoType type) ，绘制T类型的Gizmo，OnGizmo的另一种写法
	
	[InitializeOnLoad]	//编译进入unity时，static class A{  static A(){...} }
	[InitializeOnLoadMethod]	//编译进入unity时，fn
	[InitializeOnEnterPlayMode]    //fn

	[SettingsProvider]、[SettingsProviderGroup]
}

UnityEditor.AssetImporters{
	[ScriptedImporter(1, "cube")]	//class, ScriptedImporter
}

UnityEngine.Internal{
   	[Obsolete("use Object.Destroy instead.")]  //fn、sfn
   	[DefaultValue("0.0F")]  //paragm
}

